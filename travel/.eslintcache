[{"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Accesso\\Login.js":"1","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Cards\\Card.js":"2","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\App.js":"3","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\index.js":"4","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Accesso\\Routing.js":"5","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Accesso\\LoginForm.js":"6","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Footer.js":"7","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Api\\ContextApi.js":"8","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Header\\Header.js":"9","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Cards\\Cards.js":"10","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Spinner.js":"11"},{"size":5211,"mtime":1606905389515,"results":"12","hashOfConfig":"13"},{"size":8006,"mtime":1606916800987,"results":"14","hashOfConfig":"13"},{"size":455,"mtime":1606907790028,"results":"15","hashOfConfig":"13"},{"size":428,"mtime":1606908568758,"results":"16","hashOfConfig":"13"},{"size":361,"mtime":1606907948035,"results":"17","hashOfConfig":"13"},{"size":1636,"mtime":1606905389516,"results":"18","hashOfConfig":"13"},{"size":778,"mtime":1606907510330,"results":"19","hashOfConfig":"13"},{"size":1337,"mtime":1606483863831,"results":"20","hashOfConfig":"13"},{"size":926,"mtime":1606907838887,"results":"21","hashOfConfig":"13"},{"size":3493,"mtime":1606905389518,"results":"22","hashOfConfig":"13"},{"size":188,"mtime":1606483863834,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lr9ft",{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Accesso\\Login.js",["48"],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Cards\\Card.js",["49","50","51","52","53","54","55"],"import React, { useState } from \"react\";\r\n//import ReactDom from \"react-dom\";\r\nimport {MapContainer,TileLayer, Marker, Popup} from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css'\r\n/** \r\n * Questa component riceve le props dal padre Cards\r\n * e le stampa a prescindere da ciò viene passato\r\n */\r\n\r\nfunction Card(props) {\r\n    \r\n    console.log(\"props\",props.value) \r\n    const [data,setData]=useState(props.value) //utilizzata da tutte le cards\r\n    const numCard=props.num //serve a switchare il render \r\n    console.log(numCard)\r\n    \r\n    /*  Object.entries(data) -> conversione e map di un oggetto \r\n     * [1] corrisponde al valore, mentre [0] alla chiave dell'oggetto\r\n     */\r\n    \r\n    /************funzione render contattiCard ***************/\r\n    function contattiCard(){\r\n        /* props supplementari dei contatti*/\r\n        const logo=props.logo\r\n        const info=props.info\r\n        //////////////////////\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"card\" style={{\r\n                        width: '100vw',\r\n                    }}>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"col\">\r\n                                {Object.entries(data).map(val=>{\r\n                                // name: Carlo [name,Carlo]\r\n                                //image : http-- [image., http]\r\n                                //{console.log(\"entries\",val)}\r\n                                    return(\r\n                                        (val[1].substring(0,4)==\"http\") ?\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <img id=\"imageCard\" key={val[0]} src={val[1]} className=\"card-img-top\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                            :\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col\">\r\n                                                <p className=\"card-text\" key={val[0]}>{val[1]}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                                \r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            <img id=\"logoAgency\"src={logo.image}/>\r\n                            {info.map((val,index)=>{\r\n                                return(\r\n                                    <p key={index}>{val}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n//             <div className=\"card-body\">\r\n//                 <div className=\"col\">\r\n//                     {Object.entries(data).map((val) => {\r\n//                     // name: Carlo [name,Carlo]\r\n//                     //image : http-- [image., http]\r\n//                     //{console.log(\"entries\",val)}\r\n//                         return( \r\n//                             val[1].substring(0, 4) == \"http\" ? (\r\n//                                 <div className=\"row\">\r\n//                                     <div className=\"col\">\r\n//                                         <img\r\n//                                             id=\"imageCard\"\r\n//                                             key={val[0]}\r\n//                                             src={val[1]}\r\n//                                             className=\"card-img-top\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     ) : (\r\n//                                     <div className=\"col\">\r\n//                                         <p className=\"card-text\" key={val[0]}>\r\n//                                             {val[1]}\r\n//                                         </p>\r\n//                                     </div>\r\n//                                     )\r\n//                                 </div>\r\n//                         )\r\n//                     }\r\n//                     )\r\n//                 }\r\n//                 </div>\r\n//               <div className=\"col\">\r\n//                 <img id=\"logoAgency\" src={logo.image} />\r\n//                 {info.map((val, index) => {\r\n//                     return <p key={index}>{val}</p>;\r\n//                 })}\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n    /////////////////////////////////////////////////////\r\n\r\n\r\n    /************funzione render Card Tariffa ***************/\r\n    function tariffaCard(){\r\n        let tot=0\r\n        //calcola il totale complessivo dei prezzi\r\n        function totale(price){\r\n            tot+=price\r\n        }\r\n        return(\r\n            <div className=\"card\">\r\n        {/**map dei type:adulto e adolescente */}\r\n        {Object.entries(data.type).map((val)=>{\r\n            //val[0] perchè è la key di ogni riga dell'object\r\n            {console.log(\"tariffa\",val[1])}\r\n            return(\r\n                <div>\r\n                        <p key={val[0]}>{val[1]}</p>\r\n                    </div>\r\n                )})}\r\n        {/**map dei prezzi */}\r\n        {Object.entries(data.prezzi).map((val)=>{\r\n            //val[0] perchè è la key di ogni riga dell'object\r\n            {console.log(\"tariffa\",val[1])}\r\n            return(\r\n                \r\n                <div>\r\n                    {totale(val[1])}\r\n                    <p key={val[0]}>{val[1]}</p>\r\n                </div>\r\n                )})}\r\n                <div className=\"PrezzoTotale\">\r\n                    <p>Totale: </p>\r\n                    <p>{tot}</p>\r\n                </div>\r\n                <div className=\"Comprende\"> \r\n                    <p>{data.strComprende}</p>\r\n                    <p>{data.included}</p>\r\n                </div>\r\n                <div className=\"NonComprende\"> \r\n                    <p>{data.strNonComprende}</p>\r\n                    <p>{data.notIncluded}</p>\r\n                </div>\r\n           </div>\r\n        )\r\n    }\r\n    ///////////////////////////////////////////////////\r\n\r\n    /***********funzione render Documenti Card ****************/\r\n    function documentiCard(){\r\n        return(\r\n        <div className=\"card\">\r\n                    {console.log(\"dati3:\",data.titoloDocumenti)}\r\n                    <p id=\"TitoloDocumenti\">{data.titoloDocumenti}</p>\r\n                    <p id=\"ParagrafoDocumenti\">{data.paragrafoDocumenti}</p>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    /********** funzione Map **************/\r\n    function mappa(){\r\n        return(\r\n        <div className=\"card\">\r\n        <MapContainer style={{width:500, height:500}}center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n            <TileLayer\r\n             attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <Marker position={[51.505, -0.09]}>\r\n                <Popup>\r\n                 A pretty CSS3 popup. <br /> Easily customizable.\r\n                </Popup>\r\n            </Marker>\r\n        </MapContainer>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    function renderSwitchCard() {\r\n        switch(numCard) {\r\n          case 1:\r\n            return contattiCard();\r\n          case 2:\r\n            return mappa();\r\n          case 3:\r\n            return tariffaCard();\r\n          case 4:\r\n            return documentiCard();\r\n        }\r\n      }\r\n\r\n    //render \r\n    return (\r\n            <>    \r\n                {renderSwitchCard()}\r\n                \r\n            </>\r\n    )\r\n}\r\nexport default Card\r\n\r\n","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\App.js",[],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\index.js",["56","57","58","59"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Login from \"./Accesso/Login\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <>\r\n    {/* <Router>\r\n      <Redirect to=\"/login\" />\r\n      <Route exact path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n    </Router> */}\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);","C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Accesso\\Routing.js",[],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Accesso\\LoginForm.js",[],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Footer.js",["60"],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Api\\ContextApi.js",["61","62"],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Header\\Header.js",["63"],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Cards\\Cards.js",["64","65","66","67"],"C:\\Users\\Giorgio\\Desktop\\CorsoTree\\team6_travel\\travel\\src\\Spinner.js",[],{"ruleId":"68","severity":1,"message":"69","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":13,"column":17,"nodeType":"70","messageId":"71","endLine":13,"endColumn":24},{"ruleId":"73","severity":1,"message":"74","line":40,"column":63,"nodeType":"75","messageId":"76","endLine":40,"endColumn":65},{"ruleId":"77","severity":1,"message":"78","line":43,"column":49,"nodeType":"79","endLine":43,"endColumn":121},{"ruleId":"77","severity":1,"message":"78","line":56,"column":29,"nodeType":"79","endLine":56,"endColumn":67},{"ruleId":"80","severity":1,"message":"81","line":126,"column":13,"nodeType":"82","messageId":"83","endLine":126,"endColumn":44},{"ruleId":"80","severity":1,"message":"81","line":135,"column":13,"nodeType":"82","messageId":"83","endLine":135,"endColumn":44},{"ruleId":"84","severity":1,"message":"85","line":191,"column":9,"nodeType":"86","messageId":"87","endLine":200,"endColumn":10},{"ruleId":"68","severity":1,"message":"88","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":13},{"ruleId":"68","severity":1,"message":"89","line":4,"column":27,"nodeType":"70","messageId":"71","endLine":4,"endColumn":33},{"ruleId":"68","severity":1,"message":"90","line":4,"column":35,"nodeType":"70","messageId":"71","endLine":4,"endColumn":40},{"ruleId":"68","severity":1,"message":"91","line":4,"column":42,"nodeType":"70","messageId":"71","endLine":4,"endColumn":50},{"ruleId":"77","severity":1,"message":"78","line":16,"column":15,"nodeType":"79","endLine":16,"endColumn":69},{"ruleId":"92","severity":1,"message":"93","line":29,"column":7,"nodeType":"94","endLine":29,"endColumn":9,"suggestions":"95"},{"ruleId":"77","severity":1,"message":"78","line":40,"column":17,"nodeType":"79","endLine":40,"endColumn":33},{"ruleId":"77","severity":1,"message":"78","line":16,"column":13,"nodeType":"79","endLine":16,"endColumn":58},{"ruleId":"68","severity":1,"message":"96","line":27,"column":21,"nodeType":"70","messageId":"71","endLine":27,"endColumn":32},{"ruleId":"68","severity":1,"message":"97","line":28,"column":17,"nodeType":"70","messageId":"71","endLine":28,"endColumn":24},{"ruleId":"68","severity":1,"message":"98","line":49,"column":20,"nodeType":"70","messageId":"71","endLine":49,"endColumn":30},{"ruleId":"68","severity":1,"message":"99","line":60,"column":22,"nodeType":"70","messageId":"71","endLine":60,"endColumn":34},"no-unused-vars","'LoginForm' is defined but never used.","Identifier","unusedVar","'setData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Login' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dati'. Either include it or remove the dependency array.","ArrayExpression",["100"],"'setContatti' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'setTariffa' is assigned a value but never used.","'setDocuments' is assigned a value but never used.",{"desc":"101","fix":"102"},"Update the dependencies array to be: [dati]",{"range":"103","text":"104"},[858,860],"[dati]"]